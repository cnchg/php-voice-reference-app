Bandwidth SIP Call registration
=======================================================================

This application implements the guide here:
http://ap.bandwidth.com/docs/how-to-guides/use-endpoints-make-receive-calls-sip-clients/
(using PHP catapult)


What you will need:

1. A Bandwidth Catapult account
2. SIP domains enabled on your account

Steps:

This application on success will create a user, domain and endpoint. Afterwards
listen to incoming and outgoing calls, using AnswerCallEvent and IncomingCallEvent,
when the calls are both found it will bridge into one call

Instructions / Howto:

Setting It Up:
----------------------------------------------------------------

To set the SIP call processor up, you will need to:

git clone  https://github.com/BandwidthExamples/php-voice-reference-app.git

update credentials.json with your own Bandwidth User Id, Token API Key and secret,
found in your catapult account settings:

Next:

check its running properly via:

php ./start.php

if all is well you should get:

"Thanks you can use the SIP Call Processing application"

Deploying
==============================================================

Once you've inputted your credentials, you can deploy the application,
below are some instructions

Heroku 
---------------------------------------------------------------

you can deploy this on heroku using the attached procfile,
make sure your webserver config is using the attached .htaccess file

commands:

  heroku create "my-sip-application"
  git push heroku master

Your application should now be viewable as my-sip-applicaiton.herokuapp.com


More:
----------------------------------------------------------------

this application is made for single term use and will act on behalf of end users,
as a result you can call it multiple times with different credentials each
having its own domain and endpoint outputted. Your endpoint will need an application
id as this will bind all the Catapult events to it, for best use case
it is good to make a seperate application just for this program


Examples (using curl):

Creating a user with a number

curl -H 'username: my_username' -H 'password: my_password'  http://{server_url}/users/

listening to incoming calls

curl -H http://{server_url}/callback
